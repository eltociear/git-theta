#!/usr/bin/env python

import argparse
import numpy as np
from colorama import Fore

from git_theta import checkpoints, utils, params


def parse_args():
    parser = argparse.ArgumentParser(description="git-theta diff program")
    parser.add_argument("path", help="path to file being diff-ed")

    parser.add_argument(
        "old_checkpoint", help="file that old version of checkpoint can be read from"
    )
    parser.add_argument("old_hex", help="SHA-1 hash of old version of checkpoint")
    parser.add_argument("old_mode", help="file mode for old version of checkpoint")

    parser.add_argument(
        "new_checkpoint", help="file that new version of checkpoint can be read from"
    )
    parser.add_argument("new_hex", help="SHA-1 hash of new version of checkpoint")
    parser.add_argument("new_mode", help="file mode for new version of checkpoint")

    args = parser.parse_args()
    return args


def print_header(header, prefix=""):
    print(f"{prefix}{header}")
    print(f'{prefix}{"-" * len(header)}')


def print_added_params_summary(added, prefix=""):
    print_header("ADDED PARAMETER GROUPS", prefix=prefix)
    for flattened_group in added.flatten().keys():
        group = '/'.join(flattened_group)
        print(f'{prefix}{group}')
    print()


def print_removed_params_summary(removed, prefix=""):
    print_header("REMOVED PARAMETER GROUPS", prefix=prefix)
    for flattened_group in removed.flatten().keys():
        group = '/'.join(flattened_group)
        print(f'{prefix}{group}')
    print()


def print_modified_params_summary(modified, prefix=""):
    print_header("MODIFIED PARAMETER GROUPS", prefix=prefix)
    for flattened_group in modified.flatten().keys():
        group = '/'.join(flattened_group)
        print(f'{prefix}{group}')
    print()


def main(args):
    checkpoint_handler = checkpoints.get_checkpoint_handler()
    old_checkpoint = checkpoint_handler.from_file(args.old_checkpoint)
    new_checkpoint = checkpoint_handler.from_file(args.new_checkpoint)
    added, removed, modified = checkpoint_handler.diff(old_checkpoint, new_checkpoint)

    print_added_params_summary(old_model, new_model, prefix=Fore.GREEN)
    print_removed_params_summary(old_model, new_model, prefix=Fore.RED)
    print_modified_params_summary(old_model, new_model, prefix=Fore.YELLOW)


if __name__ == "__main__":
    args = parse_args()
    main(args)
